

Pandas- Limpando células vazias

Células vazias

Células vazias podem gerar resultados errados ao analisar dados.


Remover linhas

Uma maneira de lidar com células vazia é remover linhas que contêm células vazias.

Isso geralmente é aceitável, pois os conjuntos de dados podem ser muito grandes e remover algumas linhas não terá um grande impacto no resultado.

Exemplo

Retornar um novo Data Frame sem células vazias:

>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> new_df = df.dropna()
>>> 
>>> print(new_df.to_string())
    Duration          Date        Pulse     Maxpulse    Calories
0         60  '2020/12/01'          110          130       409.1
1         60  '2020/12/02'          117          145       479.0
2         60  '2020/12/03'          103          135       340.0
3         45  '2020/12/04'          109          175       282.4
4         45  '2020/12/05'          117          148       406.0
5         60  '2020/12/06'          102          127       300.0
6         60  '2020/12/07'          110          136       374.0
7        450  '2020/12/08'          104          134       253.3
8         30  '2020/12/09'          109          133       195.1
9         60  '2020/12/10'           98          124       269.0
10        60  '2020/12/11'          103          147       329.3
11        60  '2020/12/12'          100          120       250.7
12        60  '2020/12/12'          100          120       250.7
13        60  '2020/12/13'          106          128       345.3
14        60  '2020/12/14'          104          132       379.3
15        60  '2020/12/15'           98          123       275.0
16        60  '2020/12/16'           98          120       215.2
17        60  '2020/12/17'          100          120       300.0
19        60  '2020/12/19'          103          123       323.0
20        45  '2020/12/20'           97          125       243.0
21        60  '2020/12/21'          108          131       364.2
23        60  '2020/12/23'          130          101       300.0
24        45  '2020/12/24'          105          132       246.0
25        60  '2020/12/25'          102          126       334.5
26        60    2020/12/26          100          120       250.0
27        60  '2020/12/27'           92          118       241.0
29        60  '2020/12/29'          100          132       280.0
30        60  '2020/12/30'          102          129       380.3
31        60  '2020/12/31'           92          115       243.0
>>>

#Notice in the result that some rows have been removed (row 18, 22 and 28).

#These rows had cells with empty values.




Observação: por parão, o dropna() método retorna um novo DataFrame e não altera o original.

Se você quiser alterar o DataFrame original, use o inplace = True argumento:

Exemplo

Remova todas as linhas com valores NULL:


>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> df.dropna(inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date        Pulse     Maxpulse    Calories
0         60  '2020/12/01'          110          130       409.1
1         60  '2020/12/02'          117          145       479.0
2         60  '2020/12/03'          103          135       340.0
3         45  '2020/12/04'          109          175       282.4
4         45  '2020/12/05'          117          148       406.0
5         60  '2020/12/06'          102          127       300.0
6         60  '2020/12/07'          110          136       374.0
7        450  '2020/12/08'          104          134       253.3
8         30  '2020/12/09'          109          133       195.1
9         60  '2020/12/10'           98          124       269.0
10        60  '2020/12/11'          103          147       329.3
11        60  '2020/12/12'          100          120       250.7
12        60  '2020/12/12'          100          120       250.7
13        60  '2020/12/13'          106          128       345.3
14        60  '2020/12/14'          104          132       379.3
15        60  '2020/12/15'           98          123       275.0
16        60  '2020/12/16'           98          120       215.2
17        60  '2020/12/17'          100          120       300.0
19        60  '2020/12/19'          103          123       323.0
20        45  '2020/12/20'           97          125       243.0
21        60  '2020/12/21'          108          131       364.2
23        60  '2020/12/23'          130          101       300.0
24        45  '2020/12/24'          105          132       246.0
25        60  '2020/12/25'          102          126       334.5
26        60    2020/12/26          100          120       250.0
27        60  '2020/12/27'           92          118       241.0
29        60  '2020/12/29'          100          132       280.0
30        60  '2020/12/30'          102          129       380.3
31        60  '2020/12/31'           92          115       243.0
>>>

#Notice in the result that some rows have been removed (row 18, 22 and 28).

#These rows had cells with empty values.


Observação: agora, o dropna(inplace = True) Não retornará um novo DataFrame, mas removerá todas as linhas que contêm valores NULL do DataFrame original.


Substituir valores vazios

Outra maneira de lidar com células vazias é inserir um novo valor.
Dessa forma, você não precisa excluir linhas inteiras só por causa de algumas células vazia.

O fillna() método nos permite substituir células vazias por um valor:

Exemplo

Substitua os valores NULL por Moacyr:

>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> df.fillna('Moacyr', inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date        Pulse     Maxpulse   Calories
0         60  '2020/12/01'          110          130      409.1
1         60  '2020/12/02'          117          145      479.0
2         60  '2020/12/03'          103          135      340.0
3         45  '2020/12/04'          109          175      282.4
4         45  '2020/12/05'          117          148      406.0
5         60  '2020/12/06'          102          127      300.0
6         60  '2020/12/07'          110          136      374.0
7        450  '2020/12/08'          104          134      253.3
8         30  '2020/12/09'          109          133      195.1
9         60  '2020/12/10'           98          124      269.0
10        60  '2020/12/11'          103          147      329.3
11        60  '2020/12/12'          100          120      250.7
12        60  '2020/12/12'          100          120      250.7
13        60  '2020/12/13'          106          128      345.3
14        60  '2020/12/14'          104          132      379.3
15        60  '2020/12/15'           98          123      275.0
16        60  '2020/12/16'           98          120      215.2
17        60  '2020/12/17'          100          120      300.0
18        45  '2020/12/18'           90          112     Moacyr
19        60  '2020/12/19'          103          123      323.0
20        45  '2020/12/20'           97          125      243.0
21        60  '2020/12/21'          108          131      364.2
22        45        Moacyr          100          119      282.0
23        60  '2020/12/23'          130          101      300.0
24        45  '2020/12/24'          105          132      246.0
25        60  '2020/12/25'          102          126      334.5
26        60    2020/12/26          100          120      250.0
27        60  '2020/12/27'           92          118      241.0
28        60  '2020/12/28'          103          132     Moacyr
29        60  '2020/12/29'          100          132      280.0
30        60  '2020/12/30'          102          129      380.3
31        60  '2020/12/31'           92          115      243.0
>>> 
#Notice in the result: empty cells got the value Moacyr (in row 18, 22 and 28).


Substutuir somente colunas especificadas

O exemplo acima substitui todas as células vazias em todo o Data Frame.

Para substituir apenas valores vazios de uma coluna, especifique o nome da coluna para o DataFrame:

Exemplo

Substitua os valores NULL nas colunas "Calories" pela palavra Amor:

>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> df["Calories"].fillna('Amor', inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date  Pulse  Maxpulse Calories
0         60  '2020/12/01'    110       130    409.1
1         60  '2020/12/02'    117       145    479.0
2         60  '2020/12/03'    103       135    340.0
3         45  '2020/12/04'    109       175    282.4
4         45  '2020/12/05'    117       148    406.0
5         60  '2020/12/06'    102       127    300.0
6         60  '2020/12/07'    110       136    374.0
7        450  '2020/12/08'    104       134    253.3
8         30  '2020/12/09'    109       133    195.1
9         60  '2020/12/10'     98       124    269.0
10        60  '2020/12/11'    103       147    329.3
11        60  '2020/12/12'    100       120    250.7
12        60  '2020/12/12'    100       120    250.7
13        60  '2020/12/13'    106       128    345.3
14        60  '2020/12/14'    104       132    379.3
15        60  '2020/12/15'     98       123    275.0
16        60  '2020/12/16'     98       120    215.2
17        60  '2020/12/17'    100       120    300.0
18        45  '2020/12/18'     90       112     Amor
19        60  '2020/12/19'    103       123    323.0
20        45  '2020/12/20'     97       125    243.0
21        60  '2020/12/21'    108       131    364.2
22        45           NaN    100       119    282.0
23        60  '2020/12/23'    130       101    300.0
24        45  '2020/12/24'    105       132    246.0
25        60  '2020/12/25'    102       126    334.5
26        60    2020/12/26    100       120    250.0
27        60  '2020/12/27'     92       118    241.0
28        60  '2020/12/28'    103       132     Amor
29        60  '2020/12/29'    100       132    280.0
30        60  '2020/12/30'    102       129    380.3
31        60  '2020/12/31'     92       115    243.0
>>>

#This operation inserts Amor in empty cells in the "Calories" column (row 18 and 28)

Substituir usando média, mediana ou moda

Uma maneira comum de substituir células vazias é calcular a média, a mediana ou o valor da moda da coluna.

O Pandas usa os métodos mean() median() e mode() para calcular os respectivos valores para uma coluna especificada:

Exemplo

Calcule a MÉDIA e substitua quaisquer valores vazios por ela:

>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> x = df["Calories"].mean()
>>> 
>>> df["Calories"].fillna(x, inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date  Pulse  Maxpulse  Calories
0         60  '2020/12/01'    110       130    409.10
1         60  '2020/12/02'    117       145    479.00
2         60  '2020/12/03'    103       135    340.00
3         45  '2020/12/04'    109       175    282.40
4         45  '2020/12/05'    117       148    406.00
5         60  '2020/12/06'    102       127    300.00
6         60  '2020/12/07'    110       136    374.00
7        450  '2020/12/08'    104       134    253.30
8         30  '2020/12/09'    109       133    195.10
9         60  '2020/12/10'     98       124    269.00
10        60  '2020/12/11'    103       147    329.30
11        60  '2020/12/12'    100       120    250.70
12        60  '2020/12/12'    100       120    250.70
13        60  '2020/12/13'    106       128    345.30
14        60  '2020/12/14'    104       132    379.30
15        60  '2020/12/15'     98       123    275.00
16        60  '2020/12/16'     98       120    215.20
17        60  '2020/12/17'    100       120    300.00
18        45  '2020/12/18'     90       112    304.68
19        60  '2020/12/19'    103       123    323.00
20        45  '2020/12/20'     97       125    243.00
21        60  '2020/12/21'    108       131    364.20
22        45           NaN    100       119    282.00
23        60  '2020/12/23'    130       101    300.00
24        45  '2020/12/24'    105       132    246.00
25        60  '2020/12/25'    102       126    334.50
26        60    2020/12/26    100       120    250.00
27        60  '2020/12/27'     92       118    241.00
28        60  '2020/12/28'    103       132    304.68
29        60  '2020/12/29'    100       132    280.00
30        60  '2020/12/30'    102       129    380.30
31        60  '2020/12/31'     92       115    243.00
>>> 

#As you can see in row 18 and 28, the empty values from "Calories" was replaced with the mean: 304.68

Média = valor médio (a soma de todos os valores dividida pelo número de valores).


Exemplo 

Calcule a MEDIANA e substitua quaisquer valores vazios por ela:


>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> x =  df["Calories"].median()
>>> 
>>> df["Calories"].fillna(x, inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date  Pulse  Maxpulse  Calories
0         60  '2020/12/01'    110       130     409.1
1         60  '2020/12/02'    117       145     479.0
2         60  '2020/12/03'    103       135     340.0
3         45  '2020/12/04'    109       175     282.4
4         45  '2020/12/05'    117       148     406.0
5         60  '2020/12/06'    102       127     300.0
6         60  '2020/12/07'    110       136     374.0
7        450  '2020/12/08'    104       134     253.3
8         30  '2020/12/09'    109       133     195.1
9         60  '2020/12/10'     98       124     269.0
10        60  '2020/12/11'    103       147     329.3
11        60  '2020/12/12'    100       120     250.7
12        60  '2020/12/12'    100       120     250.7
13        60  '2020/12/13'    106       128     345.3
14        60  '2020/12/14'    104       132     379.3
15        60  '2020/12/15'     98       123     275.0
16        60  '2020/12/16'     98       120     215.2
17        60  '2020/12/17'    100       120     300.0
18        45  '2020/12/18'     90       112     291.2
19        60  '2020/12/19'    103       123     323.0
20        45  '2020/12/20'     97       125     243.0
21        60  '2020/12/21'    108       131     364.2
22        45           NaN    100       119     282.0
23        60  '2020/12/23'    130       101     300.0
24        45  '2020/12/24'    105       132     246.0
25        60  '2020/12/25'    102       126     334.5
26        60    2020/12/26    100       120     250.0
27        60  '2020/12/27'     92       118     241.0
28        60  '2020/12/28'    103       132     291.2
29        60  '2020/12/29'    100       132     280.0
30        60  '2020/12/30'    102       129     380.3
31        60  '2020/12/31'     92       115     243.0
>>>

#As you can see in row 18 and 28, the empty values from "Calories" was replaced with the median: 291.2


Mediana = o valor no meio, depois de você ter classificado todos os valores em ordem crescente.

Exemplo

Calcule o MODO e substitua quaisquer valores vazios por ele:

>>> import pandas as pd
>>> 
>>> df = pd.read_csv('/home/moacyr/Projects/repo-python/python/pandas/11-data.csv')
>>> 
>>> x = df["Calories"].mode()[0]
>>> 
>>> df["Calories"].fillna(x, inplace = True)
>>> 
>>> print(df.to_string())
    Duration          Date  Pulse  Maxpulse  Calories
0         60  '2020/12/01'    110       130     409.1
1         60  '2020/12/02'    117       145     479.0
2         60  '2020/12/03'    103       135     340.0
3         45  '2020/12/04'    109       175     282.4
4         45  '2020/12/05'    117       148     406.0
5         60  '2020/12/06'    102       127     300.0
6         60  '2020/12/07'    110       136     374.0
7        450  '2020/12/08'    104       134     253.3
8         30  '2020/12/09'    109       133     195.1
9         60  '2020/12/10'     98       124     269.0
10        60  '2020/12/11'    103       147     329.3
11        60  '2020/12/12'    100       120     250.7
12        60  '2020/12/12'    100       120     250.7
13        60  '2020/12/13'    106       128     345.3
14        60  '2020/12/14'    104       132     379.3
15        60  '2020/12/15'     98       123     275.0
16        60  '2020/12/16'     98       120     215.2
17        60  '2020/12/17'    100       120     300.0
18        45  '2020/12/18'     90       112     300.0
19        60  '2020/12/19'    103       123     323.0
20        45  '2020/12/20'     97       125     243.0
21        60  '2020/12/21'    108       131     364.2
22        45           NaN    100       119     282.0
23        60  '2020/12/23'    130       101     300.0
24        45  '2020/12/24'    105       132     246.0
25        60  '2020/12/25'    102       126     334.5
26        60    2020/12/26    100       120     250.0
27        60  '2020/12/27'     92       118     241.0
28        60  '2020/12/28'    103       132     300.0
29        60  '2020/12/29'    100       132     280.0
30        60  '2020/12/30'    102       129     380.3
31        60  '2020/12/31'     92       115     243.0
>>> 

#As you can see in row 18 and 28, the empty value from "Calories" was replaced with the mode: 300.0

Moda = o valor que aparece com mais frequência.
